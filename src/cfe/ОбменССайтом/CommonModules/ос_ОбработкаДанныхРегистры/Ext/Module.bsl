
// В таблице могут быть указаны группы, работаем с одноуровневой иерархией

Функция ПолучитьОстатки(НастройкаОбмена, ГруппыНоменклатуры, МассивСкладов, Изменения = Ложь) Экспорт
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	ТЗ_Склады = ПолучитьТЗСклады(МассивСкладов);
	МассивСкладовЭл = ТЗ_Склады.ВыгрузитьКолонку("Склад");
	
	Если Изменения Тогда
		
		ДатаВыгрузки = ТекущаяДата() - 1;
		
		ос_РегистрацияИзмененийРегистры.ПолучитьИзмененияОстатков(НастройкаОбмена, ДатаВыгрузки, МенеджерВТ);
		
		ТЗ_НоменклатураХарактеристика = ПолучитьНоменклатураХарактеристикаИзИзмененийОстатков(ГруппыНоменклатуры, МенеджерВТ);
		ТЗ_Комплектации = ПолучитьКомплектацииПоКомплектующим(ГруппыНоменклатуры, МенеджерВТ);
		
	Иначе
		ТЗ_НоменклатураХарактеристика = ПолучитьНоменклатураХарактеристика(ГруппыНоменклатуры, МенеджерВТ);
		ТЗ_Комплектации = ПолучитьКомплектацииПоКомплектам(МенеджерВТ);
		
	КонецЕсли;
	
	СтруктураТЗ_Остатки = ПолучитьСтруктуруТЗ_Остатки(МассивСкладовЭл);
	
	МенеджерВТ = Неопределено;
	
	СформироватьТаблицуОстатков(ТЗ_НоменклатураХарактеристика, ТЗ_Комплектации, СтруктураТЗ_Остатки, МассивСкладов, ТЗ_Склады);
	
	Возврат ТЗ_НоменклатураХарактеристика;
		
КонецФункции

Процедура ПолучитьЦены(НастройкаОбмена, ГруппыНоменклатуры, Изменения = Ложь) Экспорт
		
КонецПроцедуры

//--

Функция ПолучитьНоменклатураХарактеристика(ГруппыНоменклатуры, МенеджерВТ)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Номенклатура.Ссылка КАК Номенклатура,
	               |	Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	               |	Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	               |	ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика
	               |ПОМЕСТИТЬ втНоменклатураХарактеристика
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	               |		ПО Номенклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	               |			И (НЕ ХарактеристикиНоменклатуры.ПометкаУдаления)
	               |ГДЕ
	               |	Номенклатура.Ссылка В ИЕРАРХИИ(&ГруппыНоменклатуры)
	               |	И НЕ Номенклатура.ПометкаУдаления
	               |	И НЕ Номенклатура.ЭтоГруппа
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втНоменклатураХарактеристика.Номенклатура КАК Номенклатура,
	               |	втНоменклатураХарактеристика.ТипНоменклатуры КАК ТипНоменклатуры,
	               |	втНоменклатураХарактеристика.ВидНоменклатуры КАК ВидНоменклатуры,
	               |	втНоменклатураХарактеристика.Характеристика КАК Характеристика,
	               |	втНоменклатураХарактеристика.Номенклатура.ИспользованиеХарактеристик КАК ИспользованиеХарактеристик
	               |ИЗ
	               |	втНоменклатураХарактеристика КАК втНоменклатураХарактеристика";
	Запрос.УстановитьПараметр("ГруппыНоменклатуры", ГруппыНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

Функция ПолучитьНоменклатураХарактеристикаИзИзмененийОстатков(ГруппыНоменклатуры, МенеджерВТ)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ
	               |	втНоменклатураХарактеристика.Номенклатура КАК Номенклатура,
	               |	втНоменклатураХарактеристика.Характеристика КАК Характеристика,
	               |	втНоменклатураХарактеристика.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	               |	втНоменклатураХарактеристика.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	               |	втНоменклатураХарактеристика.Номенклатура.ИспользованиеХарактеристик КАК ИспользованиеХарактеристик
	               |ИЗ
	               |	втНоменклатураХарактеристика КАК втНоменклатураХарактеристика
	               |ГДЕ
	               |	втНоменклатураХарактеристика.Номенклатура В ИЕРАРХИИ(&ГруппыНоменклатуры)";
	Запрос.УстановитьПараметр("ГруппыНоменклатуры", ГруппыНоменклатуры);
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

//--

Функция ПолучитьКомплектацииПоКомплектам(МенеджерВТ)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ
	               |	втНоменклатураХарактеристика.Номенклатура КАК НоменклатураКомплект,
	               |	втНоменклатураХарактеристика.Характеристика КАК ХарактеристикаКомплект,
	               |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура КАК Номенклатура,
	               |	ВариантыКомплектацииНоменклатурыТовары.Характеристика КАК Характеристика,
	               |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	               |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатурыКомплектующая
	               |ИЗ
	               |	втНоменклатураХарактеристика КАК втНоменклатураХарактеристика
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	               |		ПО втНоменклатураХарактеристика.Номенклатура = ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец
	               |			И втНоменклатураХарактеристика.Характеристика = ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика
	               |ГДЕ
	               |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Основной";
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

Функция ПолучитьКомплектацииПоКомплектующим(ГруппыНоменклатуры, МенеджерВТ)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец КАК Владелец,
	               |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика КАК Характеристика
	               |ПОМЕСТИТЬ втВариантыКомплектации
	               |ИЗ
	               |	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	               |ГДЕ
	               |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Основной
	               |	И ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец В ИЕРАРХИИ(&ГруппыНоменклатуры)
	               |	И ((ВариантыКомплектацииНоменклатурыТовары.Номенклатура, ВариантыКомплектацииНоменклатурыТовары.Характеристика) В
	               |				(ВЫБРАТЬ
	               |					втНоменклатураХарактеристика.Номенклатура КАК Номенклатура,
	               |					втНоменклатураХарактеристика.Характеристика КАК Характеристика
	               |				ИЗ
	               |					втНоменклатураХарактеристика КАК втНоменклатураХарактеристика)
	               |			ИЛИ (ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец, ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика) В
	               |				(ВЫБРАТЬ
	               |					втНоменклатураХарактеристика.Номенклатура КАК Номенклатура,
	               |					втНоменклатураХарактеристика.Характеристика КАК Характеристика
	               |				ИЗ
	               |					втНоменклатураХарактеристика КАК втНоменклатураХарактеристика))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура КАК Номенклатура,
	               |	ВариантыКомплектацииНоменклатурыТовары.Характеристика КАК Характеристика,
	               |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	               |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатурыКомплектующая,
	               |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец КАК НоменклатураКомплект,
	               |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика КАК ХарактеристикаКомплект
	               |ИЗ
	               |	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	               |ГДЕ
	               |	(ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец, ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика) В
	               |			(ВЫБРАТЬ
	               |				втВариантыКомплектации.Владелец КАК Владелец,
	               |				втВариантыКомплектации.Характеристика КАК Характеристика
	               |			ИЗ
	               |				втВариантыКомплектации КАК втВариантыКомплектации)";
	
	Запрос.УстановитьПараметр("ГруппыНоменклатуры", ГруппыНоменклатуры);
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

//--

Функция ПолучитьСтруктуруТЗ_Остатки(МассивСкладов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СвободныеОстаткиОстатки.Номенклатура КАК Номенклатура,
	|	СвободныеОстаткиОстатки.Характеристика КАК Характеристика,
	|	СвободныеОстаткиОстатки.Склад КАК Склад,
	|	СвободныеОстаткиОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
	|	СвободныеОстаткиОстатки.ВНаличииОстаток - СвободныеОстаткиОстатки.ВРезервеСоСкладаОстаток - СвободныеОстаткиОстатки.ВРезервеПодЗаказОстаток КАК СвободныйОстаток,
	|	СвободныеОстаткиОстатки.Характеристика.ПометкаУдаления КАК ХарактеристикаПометкаУдаления
	|ИЗ
	|	РегистрНакопления.СвободныеОстатки.Остатки(, Склад В (&МассивСкладов)) КАК СвободныеОстаткиОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикПоступленияТоваров.Номенклатура КАК Номенклатура,
	|	ГрафикПоступленияТоваров.Характеристика КАК Характеристика,
	|	ГрафикПоступленияТоваров.Склад КАК Склад,
	|	ВЫБОР
	|		КОГДА ГрафикПоступленияТоваров.ДатаСобытия < &ТекущаяДата
	|			ТОГДА &ТекущаяДата
	|		ИНАЧЕ ГрафикПоступленияТоваров.ДатаСобытия
	|	КОНЕЦ КАК ДатаСобытия,
	|	СУММА(ГрафикПоступленияТоваров.КоличествоИзЗаказов) КАК КоличествоИзЗаказов,
	|	ГрафикПоступленияТоваров.Склад.Родитель КАК СкладРодитель
	|ИЗ
	|	РегистрНакопления.ГрафикПоступленияТоваров КАК ГрафикПоступленияТоваров
	|ГДЕ
	|	ГрафикПоступленияТоваров.Склад В(&МассивСкладов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ГрафикПоступленияТоваров.Номенклатура,
	|	ГрафикПоступленияТоваров.Характеристика,
	|	ГрафикПоступленияТоваров.Склад,
	|	ВЫБОР
	|		КОГДА ГрафикПоступленияТоваров.ДатаСобытия < &ТекущаяДата
	|			ТОГДА &ТекущаяДата
	|		ИНАЧЕ ГрафикПоступленияТоваров.ДатаСобытия
	|	КОНЕЦ,
	|	ГрафикПоступленияТоваров.Склад.Родитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоступныеОстаткиПланируемыхПоступлений.Номенклатура КАК Номенклатура,
	|	ДоступныеОстаткиПланируемыхПоступлений.Характеристика КАК Характеристика,
	|	ДоступныеОстаткиПланируемыхПоступлений.Склад КАК Склад,
	|	ВЫБОР
	|		КОГДА ДоступныеОстаткиПланируемыхПоступлений.ДатаДоступности < &ТекущаяДата
	|			ТОГДА &ТекущаяДата
	|		ИНАЧЕ ДоступныеОстаткиПланируемыхПоступлений.ДатаДоступности
	|	КОНЕЦ КАК ДатаДоступности,
	|	ДоступныеОстаткиПланируемыхПоступлений.Количество КАК Количество
	|ИЗ
	|	РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений КАК ДоступныеОстаткиПланируемыхПоступлений
	|ГДЕ
	|	ДоступныеОстаткиПланируемыхПоступлений.Склад В(&МассивСкладов)
	|	И ДоступныеОстаткиПланируемыхПоступлений.ДатаДоступности <> &ДатаДоступности";
	
	Запрос.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("МассивСкладов", МассивСкладов);
	Запрос.УстановитьПараметр("ДатаДоступности", Дата(1,1,1));
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураОстатки = Новый Структура;
	СтруктураОстатки.Вставить("СвободныеОстатки", РезультатЗапроса[0].Выгрузить());
	СтруктураОстатки.Вставить("ГрафикПоступленияТоваров", РезультатЗапроса[1].Выгрузить());
	СтруктураОстатки.Вставить("ДоступныеОстаткиПланируемыхПоступлений", РезультатЗапроса[2].Выгрузить());
	
	Возврат СтруктураОстатки;
	
КонецФункции

//--

Функция ПолучитьТаблицуОстаткиПоСкладу()
	
	ТЗ_ОстаткиКПоступлению = Новый ТаблицаЗначений;
	ТЗ_ОстаткиКПоступлению.Колонки.Добавить("Склад");
	ТЗ_ОстаткиКПоступлению.Колонки.Добавить("Всего", Новый ОписаниеТипов("Число"));
	ТЗ_ОстаткиКПоступлению.Колонки.Добавить("Свободно", Новый ОписаниеТипов("Число"));
	ТЗ_ОстаткиКПоступлению.Колонки.Добавить("ОстаткиВПути");
	
	Возврат ТЗ_ОстаткиКПоступлению;
	
КонецФункции

Функция ПолучитьТаблицуОстаткиВПутиПоСкладу()
	
	ОстаткиВПути = Новый ТаблицаЗначений;
	ОстаткиВПути.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	ОстаткиВПути.Колонки.Добавить("Всего", Новый ОписаниеТипов("Число"));
	ОстаткиВПути.Колонки.Добавить("Свободно", Новый ОписаниеТипов("Число"));
	
	Возврат ОстаткиВПути;
	
КонецФункции

//--

Процедура СформироватьТаблицуОстатков(ТЗ_НоменклатураХарактеристика, ТЗ_Комплектации, СтруктураТЗ_Остатки, МассивСкладов, ТЗ_Склады)
	
	ТЗ_НоменклатураХарактеристика.Колонки.Добавить("ОстаткиПоСкладу");
	
	Для каждого СтрНХ Из ТЗ_НоменклатураХарактеристика Цикл
		
		СтрНХ.ОстаткиПоСкладу = ПолучитьТаблицуОстаткиПоСкладу();
		
		Если СтрНХ.ИспользованиеХарактеристик <> Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать 
			И НЕ ЗначениеЗаполнено(СтрНХ.Характеристика) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		//--
		
		Если СтрНХ.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар Тогда
						
			Для каждого СтрСкл Из МассивСкладов Цикл
				
				ДобавитьОстаткиПоСкладу(СтрНХ, СтрСкл, СтруктураТЗ_Остатки, ТЗ_Склады);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	//--
	
	ТЗ_Комплекты = ТЗ_Комплектации.Скопировать(,"НоменклатураКомплект, ХарактеристикаКомплект");
	ТЗ_Комплекты.Свернуть("НоменклатураКомплект, ХарактеристикаКомплект");
	
	Для каждого СтрКомплект Из ТЗ_Комплекты Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Номенклатура", СтрКомплект.НоменклатураКомплект);
		ПараметрыОтбора.Вставить("Характеристика", СтрКомплект.НоменклатураКомплект);
		
		нСтроки = ТЗ_НоменклатураХарактеристика.НайтиСтроки(ПараметрыОтбора);
		
		Если нСтроки.Количество() > 0 Тогда
			СтрНХ = нСтроки[0];
		Иначе
			СтрНХ = ТЗ_НоменклатураХарактеристика.Добавить();
			СтрНХ.Номенклатура = СтрКомплект.НоменклатураКомплект;
			СтрНХ.Характеристика = СтрКомплект.ХарактеристикаКомплект;
			
			СтрНХ.ОстаткиПоСкладу = ПолучитьТаблицуОстаткиПоСкладу();
			
		КонецЕсли;
		
		Для каждого СтрСкл Из МассивСкладов Цикл
			
			ДобавитьОстаткиПоСкладуПоКомплектам(СтрНХ, СтрСкл, СтруктураТЗ_Остатки, ТЗ_Склады, ТЗ_Комплектации);
			
		КонецЦикла;
		
		
	КонецЦикла;
	
КонецПроцедуры

//--

Процедура ДобавитьОстаткиПоСкладу(СтрНХ, Склад, СтруктураТЗ_Остатки, ТЗ_Склады)
	
	СтрОстаткиПоСкладу = СтрНХ.ОстаткиПоСкладу.Добавить();
	СтрОстаткиПоСкладу.Склад = Склад;
	СтрОстаткиПоСкладу.ОстаткиВПути = ПолучитьТаблицуОстаткиВПутиПоСкладу();
	
	//--
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Номенклатура", СтрНХ.Номенклатура);
	ПараметрыОтбора.Вставить("Характеристика", СтрНХ.Характеристика);
	
	//--
	
	МассивЭлементовСкладов = ПолучитьЭлементыСкладов(Склад, ТЗ_Склады);
	Для каждого СтрЭлС Из МассивЭлементовСкладов Цикл
		
		ПараметрыОтбора.Вставить("Склад", СтрЭлС);
		
		нСтрокиСвОст = СтруктураТЗ_Остатки.СвободныеОстатки.НайтиСтроки(ПараметрыОтбора);
		
		Для каждого СтрСвОст Из нСтрокиСвОст Цикл
			
			СтрОстаткиПоСкладу.Всего = СтрОстаткиПоСкладу.Всего + СтрСвОст.ВНаличииОстаток;
			СтрОстаткиПоСкладу.Свободно = СтрОстаткиПоСкладу.Свободно + СтрСвОст.СвободныйОстаток; 
			
		КонецЦикла;
	КонецЦикла;
	
	ДобавитьОстаткиКПоступлению(СтрНХ, СтрОстаткиПоСкладу, МассивЭлементовСкладов, СтруктураТЗ_Остатки);
	
КонецПроцедуры

Процедура ДобавитьОстаткиКПоступлению(СтрНХ, СтрОстаткиПоСкладу, МассивЭлементовСкладов, СтруктураТЗ_Остатки)
	
	Для каждого СтрЭлС Из МассивЭлементовСкладов Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Номенклатура", СтрНХ.Номенклатура);
		ПараметрыОтбора.Вставить("Характеристика", СтрНХ.Характеристика);
		ПараметрыОтбора.Вставить("Склад", СтрЭлС);
		
		нСтрокиГрафик = СтруктураТЗ_Остатки.ГрафикПоступленияТоваров.НайтиСтроки(ПараметрыОтбора);
		
		Для каждого СтрГр Из нСтрокиГрафик Цикл
			
			СтрОстаткиВПути = СтрОстаткиПоСкладу.ОстаткиВПути.Добавить();
			СтрОстаткиВПути.Дата = СтрГр.ДатаСобытия;
			СтрОстаткиВПути.Всего = СтрГр.КоличествоИзЗаказов;
			
			ПараметрыОтбора.Вставить("ДатаДоступности", СтрГр.ДатаСобытия);
			
			нСтрокиДО = СтруктураТЗ_Остатки.ДоступныеОстаткиПланируемыхПоступлений.НайтиСтроки(ПараметрыОтбора);	  
			
			Если нСтрокиДО.Количество() = 1 Тогда
				СтрОстаткиВПути.Свободно = нСтрокиДО[0].Количество;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры

//--

Процедура ДобавитьОстаткиПоСкладуПоКомплектам(СтрНХ, Склад, СтруктураТЗ_Остатки, ТЗ_Склады, ТЗ_Комплектации)
	
	ТЗ_ОстаткиКомплектов = ТЗ_Комплектации.СкопироватьКолонки();
	ТЗ_ОстаткиКомплектов.Колонки.Добавить("Всего", Новый ОписаниеТипов("Число"));
	ТЗ_ОстаткиКомплектов.Колонки.Добавить("Свободно", Новый ОписаниеТипов("Число"));
	
	//--
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Склад", Склад);
	
	нСтроки = СтрНХ.ОстаткиПоСкладу.НайтиСтроки(ПараметрыОтбора);
	
	Если нСтроки.Количество() > 0  Тогда
		СтрОстаткиПоСкладу = нСтроки[0];
		
	Иначе
		
		СтрОстаткиПоСкладу = СтрНХ.ОстаткиПоСкладу.Добавить();
		СтрОстаткиПоСкладу.Склад = Склад;
		СтрОстаткиПоСкладу.ОстаткиВПути = ПолучитьТаблицуОстаткиВПутиПоСкладу();
		
	КонецЕсли;
	
	МассивЭлементовСкладов = ПолучитьЭлементыСкладов(Склад, ТЗ_Склады);
	
	Для каждого СтрЭлС Из МассивЭлементовСкладов Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("НоменклатураКомплект", СтрНХ.Номенклатура);
		ПараметрыОтбора.Вставить("ХарактеристикаКомплект", СтрНХ.Характеристика);
		
		нСтрокиК = ТЗ_Комплектации.НайтиСтроки(ПараметрыОтбора);
		
		Для каждого СтрК Из нСтрокиК Цикл
			
			Если СтрК.ТипНоменклатурыКомплектующая = Перечисления.ТипыНоменклатуры.Услуга Тогда
				Продолжить;
			КонецЕсли;
			
			СтрОстаткиКомплектов = ТЗ_ОстаткиКомплектов.Добавить();
			ЗаполнитьЗначениясвойств(СтрОстаткиКомплектов, СтрК);
			
			//--
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Номенклатура", СтрК.Номенклатура);
			ПараметрыОтбора.Вставить("Характеристика", СтрК.Характеристика);
			ПараметрыОтбора.Вставить("Склад", СтрЭлС);
			
			нСтрокиСвОст = СтруктураТЗ_Остатки.СвободныеОстатки.НайтиСтроки(ПараметрыОтбора);
			
			Если нСтрокиСвОст.Количество() > 0 Тогда
				
				СтрОстаткиКомплектов.Всего = нСтрокиСвОст[0].ВНаличииОстаток / СтрК.КоличествоУпаковок;
				СтрОстаткиКомплектов.Свободно = нСтрокиСвОст[0].СвободныйОстаток / СтрК.КоличествоУпаковок;
				
			КонецЕсли;
					
		КонецЦикла;
	КонецЦикла;
	
	//--
	
	ТЗ_ОстаткиКомплектов.Свернуть("НоменклатураКомплект, ХарактеристикаКомплект, Номенклатура, Характеристика", "Всего, Свободно");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	втНоменклатура.НоменклатураКомплект КАК НоменклатураКомплект,
	               |	втНоменклатура.ХарактеристикаКомплект КАК ХарактеристикаКомплект,
	               |	втНоменклатура.Всего КАК Всего,
	               |	втНоменклатура.Свободно КАК Свободно
	               |ПОМЕСТИТЬ втНоменклатура1
	               |ИЗ
	               |	&втНоменклатура КАК втНоменклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втНоменклатура1.НоменклатураКомплект КАК НоменклатураКомплект,
	               |	втНоменклатура1.ХарактеристикаКомплект КАК ХарактеристикаКомплект,
	               |	МИНИМУМ(втНоменклатура1.Всего) КАК Всего,
	               |	МИНИМУМ(втНоменклатура1.Свободно) КАК Свободно
	               |ИЗ
	               |	втНоменклатура1 КАК втНоменклатура1
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втНоменклатура1.НоменклатураКомплект,
	               |	втНоменклатура1.ХарактеристикаКомплект";
	Запрос.УстановитьПараметр("втНоменклатура", ТЗ_ОстаткиКомплектов);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		СтрОстаткиПоСкладу.Всего = СтрОстаткиПоСкладу.Всего + Выборка.Всего;
		СтрОстаткиПоСкладу.Свободно = СтрОстаткиПоСкладу.Свободно + Выборка.Свободно;	
	КонецЕсли;
	
	ДобавитьОстаткиКПоступлениюПоКомплектам(СтрНХ, СтрОстаткиПоСкладу, МассивЭлементовСкладов, СтруктураТЗ_Остатки, ТЗ_Комплектации);
	
КонецПроцедуры

Процедура ДобавитьОстаткиКПоступлениюПоКомплектам(СтрНХ, СтрОстаткиПоСкладу, МассивЭлементовСкладов, СтруктураТЗ_Остатки, ТЗ_Комплектации);
	
	ТЗ_ОстаткиКомплектов = ТЗ_Комплектации.СкопироватьКолонки("Номенклатура, Характеристика");
	ТЗ_ОстаткиКомплектов.Колонки.Добавить("Всего", Новый ОписаниеТипов("Число"));
	ТЗ_ОстаткиКомплектов.Колонки.Добавить("Свободно", Новый ОписаниеТипов("Число"));
	ТЗ_ОстаткиКомплектов.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	
	//--
	
	Для каждого СтрЭлС Из МассивЭлементовСкладов Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("НоменклатураКомплект", СтрНХ.Номенклатура);
		ПараметрыОтбора.Вставить("ХарактеристикаКомплект", СтрНХ.Характеристика);
		
		нСтрокиК = ТЗ_Комплектации.НайтиСтроки(ПараметрыОтбора);
		
		ТЗ_Комплектации_1 = ТЗ_Комплектации.Скопировать(нСтрокиК);
		
		Для каждого СтрК Из ТЗ_Комплектации_1 Цикл
			
			Если СтрК.ТипНоменклатурыКомплектующая = перечисления.ТипыНоменклатуры.Услуга Тогда
				Продолжить;
			КонецЕсли;
			
			//--
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Номенклатура", СтрК.Номенклатура);
			ПараметрыОтбора.Вставить("Характеристика", СтрК.Характеристика);
			ПараметрыОтбора.Вставить("Склад", СтрЭлС);
			
			нСтрокиГрафик = СтруктураТЗ_Остатки.ГрафикПоступленияТоваров.НайтиСтроки(ПараметрыОтбора);
			
			Для каждого СтрГр Из нСтрокиГрафик Цикл
				
				СтрОстаткиКомплектов = ТЗ_ОстаткиКомплектов.Добавить();
				ЗаполнитьЗначениясвойств(СтрОстаткиКомплектов, СтрК);
				
				СтрОстаткиКомплектов.Дата = СтрГр.ДатаСобытия;
				СтрОстаткиКомплектов.Всего = СтрГр.КоличествоИзЗаказов / СтрК.КоличествоУпаковок;
				
				ПараметрыОтбора.Вставить("ДатаДоступности", СтрГр.ДатаСобытия);
				
				нСтрокиДО = СтруктураТЗ_Остатки.ДоступныеОстаткиПланируемыхПоступлений.НайтиСтроки(ПараметрыОтбора);	  
				
				Если нСтрокиДО.Количество() = 1 Тогда
					СтрОстаткиКомплектов.Свободно = нСтрокиДО[0].Количество;
				КонецЕсли;
				
			КонецЦикла;
						
		КонецЦикла;
		
	КонецЦикла;
	
	//--
	
	Если ТЗ_ОстаткиКомплектов.Количество() > 0 Тогда
		
		ТЗ_ОстаткиКомплектов.Свернуть("Номенклатура, Характеристика, Дата", "Всего, Свободно");
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	втОстатки.Номенклатура КАК Номенклатура,
		               |	втОстатки.Характеристика КАК Характеристика,
		               |	втОстатки.Дата КАК Дата,
		               |	втОстатки.Всего КАК Всего,
		               |	втОстатки.Свободно КАК Свободно
		               |ПОМЕСТИТЬ втОстатки
		               |ИЗ
		               |	&втОстатки КАК втОстатки
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	втКомплектации.НоменклатураКомплект КАК НоменклатураКомплект,
		               |	втКомплектации.ХарактеристикаКомплект КАК ХарактеристикаКомплект,
		               |	втКомплектации.Номенклатура КАК Номенклатура,
		               |	втКомплектации.Характеристика КАК Характеристика
		               |ПОМЕСТИТЬ втКомплектации
		               |ИЗ
		               |	&втКомплектации КАК втКомплектации
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	втКомплектации.НоменклатураКомплект КАК НоменклатураКомплект,
		               |	втКомплектации.ХарактеристикаКомплект КАК ХарактеристикаКомплект,
		               |	втКомплектации.Номенклатура КАК Номенклатура,
		               |	втКомплектации.Характеристика КАК Характеристика,
		               |	втОстатки.Дата КАК Дата
		               |ПОМЕСТИТЬ втНХДаты
		               |ИЗ
		               |	втОстатки КАК втОстатки,
		               |	втКомплектации КАК втКомплектации
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	втНХДаты.Номенклатура КАК Номенклатура,
		               |	втНХДаты.Характеристика КАК Характеристика,
		               |	втНХДаты.Дата КАК Дата,
		               |	ЕСТЬNULL(втОстатки.Всего, 0) КАК Всего,
		               |	ЕСТЬNULL(втОстатки.Свободно, 0) КАК Свободно,
		               |	втНХДаты.НоменклатураКомплект КАК НоменклатураКомплект,
		               |	втНХДаты.ХарактеристикаКомплект КАК ХарактеристикаКомплект
		               |ПОМЕСТИТЬ втОстаткиМин
		               |ИЗ
		               |	втНХДаты КАК втНХДаты
		               |		ЛЕВОЕ СОЕДИНЕНИЕ втОстатки КАК втОстатки
		               |		ПО втНХДаты.Номенклатура = втОстатки.Номенклатура
		               |			И втНХДаты.Характеристика = втОстатки.Характеристика
		               |			И втНХДаты.Дата = втОстатки.Дата
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	втОстаткиМин.Дата КАК Дата,
		               |	МИНИМУМ(втОстаткиМин.Всего) КАК Всего,
		               |	МИНИМУМ(втОстаткиМин.Свободно) КАК Свободно,
		               |	втОстаткиМин.НоменклатураКомплект КАК НоменклатураКомплект,
		               |	втОстаткиМин.ХарактеристикаКомплект КАК ХарактеристикаКомплект
		               |ИЗ
		               |	втОстаткиМин КАК втОстаткиМин
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	втОстаткиМин.НоменклатураКомплект,
		               |	втОстаткиМин.ХарактеристикаКомплект,
		               |	втОстаткиМин.Дата
		               |
		               |ИМЕЮЩИЕ
		               |	МИНИМУМ(втОстаткиМин.Всего) > 0";
		Запрос.УстановитьПараметр("втОстатки", ТЗ_ОстаткиКомплектов);
		Запрос.УстановитьПараметр("втКомплектации", ТЗ_Комплектации_1);
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Дата", Выборка.Дата);
			
			нСтроки = СтрОстаткиПоСкладу.ОстаткиВПути.НайтиСтроки(ПараметрыОтбора);
			
			Если нСтроки.Количество() > 0 Тогда
				нСтроки[0].Всего = нСтроки[0].Всего + Выборка.Всего;
				нСтроки[0].Свободно = нСтроки[0].Свободно + Выборка.Свободно;
			Иначе
				СтрВПути = СтрОстаткиПоСкладу.ОстаткиВПути.Добавить();
				СтрВПути.Дата = Выборка.Дата;
				СтрВПути.Всего = Выборка.Всего;
				СтрВПути.Свободно = Выборка.Свободно;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

//--

Функция ПолучитьТЗСклады(МассивСкладов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Склады.Ссылка КАК Склад,
	|	Склады.Родитель КАК Родитель,
	|	Склады.ЭтоГруппа КАК ЭтоГруппа
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.Ссылка В ИЕРАРХИИ(&МассивСкладов)";
	Запрос.УстановитьПараметр("МассивСкладов", МассивСкладов);
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьЭлементыСкладов(Склад, ТЗ_Склады);
	
	МассивСкладов = Новый Массив;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Склад", Склад);
	нСтроки = ТЗ_Склады.НайтиСтроки(ПараметрыОтбора);
	
	Если НЕ нСтроки[0].ЭтоГруппа Тогда
		
		МассивСкладов.Добавить(Склад);
		
	Иначе
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Родитель", Склад);
		нСтроки = ТЗ_Склады.НайтиСтроки(ПараметрыОтбора);
		
		Для каждого СтрН Из нСтроки Цикл
			МассивСкладов.Добавить(СтрН.Склад);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат МассивСкладов;
	
КонецФункции
